import { InferGetServerSidePropsType, type NextPage } from "next";
import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import Link from "next/link";
import React from "react";
import Navbar from "~/components/navbar/Navbar";
import MobileBottomBar from "~/components/mobileBottomBar/MobileBottomBar";
import ResutsRow from "~/components/resultsRow/ResultsRow";
import requests, { ReturnObjectKeys } from "~/utils/requests";
import { api } from "~/utils/api";
import { MovieItemType } from "~/types";

interface getServerSidePropsDataType {
  highlighted: MovieItemType;
  trending: MovieItemType[];
  action: MovieItemType[];
  comedy: MovieItemType[];
  horror: MovieItemType[];
}

const Test = ({
  highlighted,
  trending,
  action,
  comedy,
  horror,
}: InferGetServerSidePropsType<typeof getServerSideProps>) => {
  const { mutate: createNotificationMutate } =
    api.notification.create.useMutation();
  const [notificationValue, setNotificationValue] = React.useState("");
  const user = useSession().data?.user;

  console.log(highlighted);

  return (
    <>
      <Head>
        <title>Test Panel</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="mt-[70px] flex min-h-[calc(100vh-70px)] flex-col items-center justify-start overflow-x-hidden">
        <Navbar />
        <div className="flex w-full justify-center gap-x-1">
          <input
            placeholder="Notification"
            value={notificationValue}
            onChange={(event) =>
              setNotificationValue(event.currentTarget.value)
            }
            className={`flex items-center justify-center rounded-md bg-[#2e2e2e]/50 px-3 py-3 text-2xl md:py-[6px] md:text-base`}
          />
          <button
            onClick={() =>
              createNotificationMutate({
                userId: user?.id as string,
                content: notificationValue as string,
              })
            }
            className={`flex items-center justify-center rounded-md bg-[#2e2e2e] px-3 py-3 text-2xl md:py-[6px] md:text-base`}
          >
            Send
          </button>
          <iframe
            width="560"
            height="315"
            src="https://www.youtube-nocookie.com/embed/1OzgPP4GzlY"
            title="YouTube video player"
            // frameborder="0"
            allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
            allowFullScreen
          ></iframe>
        </div>
        <MobileBottomBar />
      </main>
    </>
  );
};

export default Test;

export async function getServerSideProps() {
  const {
    highlighted,
    trending,
    comedy,
    action,
    horror,
  }: getServerSidePropsDataType = await fetch(
    `${process.env.NEXTAUTH_URL}/api/fetchCategories`
  ).then((res) => res.json());

  return {
    props: {
      highlighted: highlighted,
      trending: trending,
      comedy: comedy,
      action: action,
      horror: horror,
    },
  };
}
