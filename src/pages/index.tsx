import { type NextPage } from "next";
import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";
import Link from "next/link";
import React from "react";
import Navbar from "~/components/navbar/Navbar";
import MobileBottomBar from "~/components/mobileBottomBar/MobileBottomBar";
import ResutsRow from "~/components/resultsRow/ResultsRow";
import requests from "~/utils/requests";

const apiUrl = "https://api.themoviedb.org/3";

const Home: NextPage = ({
  highlighted,
  trending,
  action,
  comedy,
  horror,
  fetchMovieById,
}: any) => {
  const BASE_IMAGE_URL = "https://image.tmdb.org/t/p/original/";
  const user = useSession().data?.user;
  const [myList, setMyList] = React.useState([]);
  const [myListIds, setMyListIds] = React.useState(
    JSON.parse(user?.myListIds as string)
  );

  React.useEffect(() => {
    let tempMyListItems: any[] = [];
    myListIds.map(async (item: string) => {
      const data = await fetch(
        (fetchMovieById as string).replace("movieId", item)
      ).then((result) => result.json());
      console.log(data);
    });
  }, [myListIds]);

  console.log(myList);
  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center overflow-x-hidden">
        <Navbar />
        <section className="billboard h-[75vh] w-full overflow-y-hidden md:h-[85vh]">
          <div className="absolute top-32 w-full flex-col px-8 text-center md:px-16 md:text-start">
            <div className="w-full pb-6 md:w-[390px]">
              <h1 className="text-5xl font-semibold">{highlighted?.title}</h1>
            </div>
            <div className="pb-2">
              <span className="text-zinc-200">
                {Number(highlighted?.vote_average).toFixed(1)}
                {" â€¢ "}
                {highlighted?.release_date}
              </span>
            </div>
            <div className="w-full  md:w-[470px]">
              <h1 className="text-md line-clamp-5 md:line-clamp-3">
                {highlighted?.overview}
              </h1>
            </div>
          </div>
          <img
            className="-z-50 h-full w-full object-cover"
            src={`${BASE_IMAGE_URL}${highlighted?.backdrop_path}`}
          />
        </section>
        <section className="mb-40 mt-[-10vh] flex flex-col space-y-10 overflow-y-hidden md:mt-[-7vh]">
          <ResutsRow title="Trending" results={trending} />
          <ResutsRow title="Comedy" results={comedy} />
          <ResutsRow title="Action" results={action} />
          <ResutsRow title="Horror" results={horror} />
          <ResutsRow isMyList title="My List" />
        </section>
        <MobileBottomBar />
      </main>
    </>
  );
};

export default Home;

export async function getServerSideProps() {
  const highlighted = await fetch(
    `${apiUrl}${requests.highlightedMovie.url}`
  ).then((res) => res.json());

  const trending = await fetch(`${apiUrl}${requests.fetchTrending.url}`).then(
    (res) => res.json()
  );

  const comedy = await fetch(`${apiUrl}${requests.fetchComedyMovies.url}`).then(
    (res) => res.json()
  );

  const action = await fetch(`${apiUrl}${requests.fetchActionMovies.url}`).then(
    (res) => res.json()
  );

  const horror = await fetch(`${apiUrl}${requests.fetchHorrorMovies.url}`).then(
    (res) => res.json()
  );

  const fetchMovieById = requests.fetchMovieById.url;

  return {
    props: {
      highlighted: highlighted.results[0],
      trending: trending.results,
      comedy: comedy.results,
      action: action.results,
      horror: horror.results,
      fetchMovieById: fetchMovieById,
    },
  };
}
